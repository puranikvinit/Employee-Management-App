name: Fake CI / CD

on:
  push:
    branches:
      - "main"

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  NUMBER_1: 0
  NUMBER_2: 0
  NUMBER_3: 0
  TOKEN: ""
  STATUS_CODE: ""

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image and Push
        uses: docker/build-push-action@v3
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/emp_man:latest
  
  fake-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: get-token-and-numbers
        run: touch response.json && curl --request GET https://fdeployserver.up.railway.app/challenge > ./response.json && echo ::set-env name=TOKEN::$(jq '.token' response.json) && echo ::set-env name=NUMBER_1::$(jq '.num1' response.json) && echo ::set-env name=NUMBER_2::$(jq '.num2' response.json)

      - name: calculate-answer
        run: echo "$NUMBER_1" && echo "$NUMBER_2" && echo "$TOKEN" echo ::set-env name=NUMBER_3::$(( $NUMBER_1 + $NUMBER_2 ))

      - name: fake-deploy-check
        run: touch status.txt && curl -d {"token":$TOKEN,"answer":$NUMBER_3} --request POST https://fdeployserver.up.railway.app/deploy > ./status.txt && echo ::set-env name=STATUS_CODE::cat status.txt
        
      - name: Failing deployment if response is not "OK"
        # if: $STATUS_CODE != "OK"
        run: echo "$STATUS_CODE"